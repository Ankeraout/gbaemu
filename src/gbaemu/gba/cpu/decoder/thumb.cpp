#include <cstdint>

#include <gbaemu/gba/cpu/decoder.hpp>

#define REP2(x) x, x
#define REP4(x) REP2(x), REP2(x)
#define REP8(x) REP4(x), REP4(x)
#define REP16(x) REP8(x), REP8(x)

namespace gbaemu::gba::cpu::decoder::thumb {
    const thumbOpcodeCallback_t opcodeDecoderTable[] = {
        NULL, // 0x00
        NULL, // 0x01
        NULL, // 0x02
        NULL, // 0x03
        NULL, // 0x04
        NULL, // 0x05
        NULL, // 0x06
        NULL, // 0x07
        NULL, // 0x08
        NULL, // 0x09
        NULL, // 0x0a
        NULL, // 0x0b
        NULL, // 0x0c
        NULL, // 0x0d
        NULL, // 0x0e
        NULL, // 0x0f
        NULL, // 0x10
        NULL, // 0x11
        NULL, // 0x12
        NULL, // 0x13
        NULL, // 0x14
        NULL, // 0x15
        NULL, // 0x16
        NULL, // 0x17
        NULL, // 0x18
        NULL, // 0x19
        NULL, // 0x1a
        NULL, // 0x1b
        NULL, // 0x1c
        NULL, // 0x1d
        NULL, // 0x1e
        NULL, // 0x1f
        NULL, // 0x20
        NULL, // 0x21
        NULL, // 0x22
        NULL, // 0x23
        NULL, // 0x24
        NULL, // 0x25
        NULL, // 0x26
        NULL, // 0x27
        NULL, // 0x28
        NULL, // 0x29
        NULL, // 0x2a
        NULL, // 0x2b
        NULL, // 0x2c
        NULL, // 0x2d
        NULL, // 0x2e
        NULL, // 0x2f
        NULL, // 0x30
        NULL, // 0x31
        NULL, // 0x32
        NULL, // 0x33
        NULL, // 0x34
        NULL, // 0x35
        NULL, // 0x36
        NULL, // 0x37
        NULL, // 0x38
        NULL, // 0x39
        NULL, // 0x3a
        NULL, // 0x3b
        NULL, // 0x3c
        NULL, // 0x3d
        NULL, // 0x3e
        NULL, // 0x3f
        NULL, // 0x40
        NULL, // 0x41
        NULL, // 0x42
        NULL, // 0x43
        NULL, // 0x44
        NULL, // 0x45
        NULL, // 0x46
        NULL, // 0x47
        NULL, // 0x48
        NULL, // 0x49
        NULL, // 0x4a
        NULL, // 0x4b
        NULL, // 0x4c
        NULL, // 0x4d
        NULL, // 0x4e
        NULL, // 0x4f
        NULL, // 0x50
        NULL, // 0x51
        NULL, // 0x52
        NULL, // 0x53
        NULL, // 0x54
        NULL, // 0x55
        NULL, // 0x56
        NULL, // 0x57
        NULL, // 0x58
        NULL, // 0x59
        NULL, // 0x5a
        NULL, // 0x5b
        NULL, // 0x5c
        NULL, // 0x5d
        NULL, // 0x5e
        NULL, // 0x5f
        NULL, // 0x60
        NULL, // 0x61
        NULL, // 0x62
        NULL, // 0x63
        NULL, // 0x64
        NULL, // 0x65
        NULL, // 0x66
        NULL, // 0x67
        NULL, // 0x68
        NULL, // 0x69
        NULL, // 0x6a
        NULL, // 0x6b
        NULL, // 0x6c
        NULL, // 0x6d
        NULL, // 0x6e
        NULL, // 0x6f
        NULL, // 0x70
        NULL, // 0x71
        NULL, // 0x72
        NULL, // 0x73
        NULL, // 0x74
        NULL, // 0x75
        NULL, // 0x76
        NULL, // 0x77
        NULL, // 0x78
        NULL, // 0x79
        NULL, // 0x7a
        NULL, // 0x7b
        NULL, // 0x7c
        NULL, // 0x7d
        NULL, // 0x7e
        NULL, // 0x7f
        NULL, // 0x80
        NULL, // 0x81
        NULL, // 0x82
        NULL, // 0x83
        NULL, // 0x84
        NULL, // 0x85
        NULL, // 0x86
        NULL, // 0x87
        NULL, // 0x88
        NULL, // 0x89
        NULL, // 0x8a
        NULL, // 0x8b
        NULL, // 0x8c
        NULL, // 0x8d
        NULL, // 0x8e
        NULL, // 0x8f
        NULL, // 0x90
        NULL, // 0x91
        NULL, // 0x92
        NULL, // 0x93
        NULL, // 0x94
        NULL, // 0x95
        NULL, // 0x96
        NULL, // 0x97
        NULL, // 0x98
        NULL, // 0x99
        NULL, // 0x9a
        NULL, // 0x9b
        NULL, // 0x9c
        NULL, // 0x9d
        NULL, // 0x9e
        NULL, // 0x9f
        NULL, // 0xa0
        NULL, // 0xa1
        NULL, // 0xa2
        NULL, // 0xa3
        NULL, // 0xa4
        NULL, // 0xa5
        NULL, // 0xa6
        NULL, // 0xa7
        NULL, // 0xa8
        NULL, // 0xa9
        NULL, // 0xaa
        NULL, // 0xab
        NULL, // 0xac
        NULL, // 0xad
        NULL, // 0xae
        NULL, // 0xaf
        NULL, // 0xb0
        NULL, // 0xb1
        NULL, // 0xb2
        NULL, // 0xb3
        NULL, // 0xb4
        NULL, // 0xb5
        NULL, // 0xb6
        NULL, // 0xb7
        NULL, // 0xb8
        NULL, // 0xb9
        NULL, // 0xba
        NULL, // 0xbb
        NULL, // 0xbc
        NULL, // 0xbd
        NULL, // 0xbe
        NULL, // 0xbf
        NULL, // 0xc0
        NULL, // 0xc1
        NULL, // 0xc2
        NULL, // 0xc3
        NULL, // 0xc4
        NULL, // 0xc5
        NULL, // 0xc6
        NULL, // 0xc7
        NULL, // 0xc8
        NULL, // 0xc9
        NULL, // 0xca
        NULL, // 0xcb
        NULL, // 0xcc
        NULL, // 0xcd
        NULL, // 0xce
        NULL, // 0xcf
        NULL, // 0xd0
        NULL, // 0xd1
        NULL, // 0xd2
        NULL, // 0xd3
        NULL, // 0xd4
        NULL, // 0xd5
        NULL, // 0xd6
        NULL, // 0xd7
        NULL, // 0xd8
        NULL, // 0xd9
        NULL, // 0xda
        NULL, // 0xdb
        NULL, // 0xdc
        NULL, // 0xdd
        NULL, // 0xde
        NULL, // 0xdf
        NULL, // 0xe0
        NULL, // 0xe1
        NULL, // 0xe2
        NULL, // 0xe3
        NULL, // 0xe4
        NULL, // 0xe5
        NULL, // 0xe6
        NULL, // 0xe7
        NULL, // 0xe8
        NULL, // 0xe9
        NULL, // 0xea
        NULL, // 0xeb
        NULL, // 0xec
        NULL, // 0xed
        NULL, // 0xee
        NULL, // 0xef
        NULL, // 0xf0
        NULL, // 0xf1
        NULL, // 0xf2
        NULL, // 0xf3
        NULL, // 0xf4
        NULL, // 0xf5
        NULL, // 0xf6
        NULL, // 0xf7
        NULL, // 0xf8
        NULL, // 0xf9
        NULL, // 0xfa
        NULL, // 0xfb
        NULL, // 0xfc
        NULL, // 0xfd
        NULL, // 0xfe
        NULL, // 0xff
    };

    thumbOpcodeCallback_t decode(uint16_t opcode) {
        return opcodeDecoderTable[opcode >> 8];
    }
}